name: Vue build and update stats

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-update:
    name: Build and update stats
    runs-on: ubuntu-latest
    env:
      stats: ${{ contains(github.event.head_commit.message, 'Scheduled stats update') }}
      code: ${{ contains(github.event.head_commit.message, 'Code submission') }}
    steps:
    - name: Clone repository
      run: "git clone https://${{ secrets.GH_PERSONAL_TOKEN }}@github.com/encap/coderush.git ."
    - name: Setup Node.js
      if: env.stats == 'false' && env.code == 'false'
      uses: actions/setup-node@v1
      with:
        node-version: '12'
    - uses: actions/cache@v2
      if: env.stats == 'false' && env.code == 'false'
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Run npm install
      if: env.stats == 'false' && env.code == 'false'
      run: npm install
    - name: Vue build
      if: env.stats == 'false' && env.code == 'false'
      run: npm run build
    - name: Copy submitted code
      if: env.code == 'true'
      run: |
        mkdir -p dist
        cp -r public/code dist/code
    - name: Configure git
      run: |
        git config --global credential.helper cache
        git config --global user.email "bot@github.com"
        git config --global user.name "Bot"
    - name: Stage files
      run: |
        git add -f server/ dist/
        git commit --allow-empty -m 'temp commit'
    - name: Switch to deploy branch
      run: git checkout deploy
    - name: Clear old files
      run: |
        rm -r server/ dist/
    - name: Checkout files from master
      if: env.stats == 'false'
      run: |
        git checkout master -- "server/" "dist/"
    - name: Checkout files from master
      if: env.stats == 'true'
      run: |
        git checkout master -- "server/"
    - name: Commit build
      if: env.stats == 'false' && env.code == 'false'
      run: git commit --allow-empty -m 'Automatic deploy'
    - name: Commit stats update
      if: env.stats == 'true'
      run: git commit -m 'Scheduled stats update'
    - name: Commit new submission
      if: env.code == 'true'
      run: git commit -m 'Code database update - new submission'
    - name: Push for deployment
      run: git push